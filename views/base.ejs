<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" href="/css/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
<div class="scrollToTop" onclick="scrollToTop()">
    <svg width="43" height="43" viewBox="0 0 43 43" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect x="1" y="1" width="41" height="41" rx="20.5" stroke="black" style="stroke:black;stroke-opacity:1;"
              stroke-width="2"/>
        <path d="M12.5954 17.8629H19.7621V33.8445L23.3633 33.8983V17.8629H30.5121L21.5538 8.90454L12.5954 17.8629Z"
              fill="black" style="fill:black;fill-opacity:1;"/>
    </svg>
</div>
<!--ROUTES LIST -->
<details class="routesNavigation">
    <summary>Routes</summary>
    <% routes.forEach(function(route, index){ %>
        <span onclick="scrollToDiv(<%- index %>)"><%- route.title %></span>
    <% }); %>
</details>

<!--RESPONSIV 630px -->
<div class="navigationOverlay">
    <span>Scroll to see routes</span>
    <div class="overlayRoutes">
        <% routes.forEach(function(route, index){ %>
            <span onclick="scrollToDiv(<%- index %>)"><%- route.title %></span>
        <% }); %>
    </div>

</div>

<div class="burgerNavigation" onclick="burgerNavigation()">
    <svg width="20" height="15" viewBox="0 0 20 15" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect y="0.5" width="20" height="2" fill="#0D071B"/>
        <rect x="10" y="6.5" width="10" height="2" fill="#0D071B"/>
        <rect y="12.5" width="20" height="2" fill="#0D071B"/>
    </svg>
</div>

<!-- CONTENT -->
<div class="bleu">
    <h1 class="caramel">Bookshelf API</h1>
    Please note that in JSON responses, when you see [ ], it indicates that there can be multiple instances or even the
    same content within the brackets.
</div>

<% routes.forEach(function(route, index){
%>
    <div class="<%= index % 2 !== 0 ? 'bleu' : 'white' %> div<%= index %>">
        <%- include('partials/routeTemplate', { route: route }); %>
    </div>
<% }); %>

<script>

    function burgerNavigation(){
        let overlay = document.querySelector('.navigationOverlay');
        let body = document.querySelector('body');
        if (overlay.style.display == 'flex') {
            overlay.style.display = 'none';
            body.style.overflow = 'auto';
        }else{
            overlay.style.display = 'flex';
            body.style.overflow = 'hidden';
        }

    }

    function scrollToTop() {
        window.scrollTo(0, 0);
    }


    function scrollToDiv(route) {

        let overlay = document.querySelector('.navigationOverlay');
        let body = document.querySelector('body');
        if (overlay.style.display === 'flex') {
            overlay.style.display = 'none';
            body.style.overflow = 'auto';
        }

        const element = document.querySelector(`.div${route}`);
        console.log(element)
        if (element) {
            element.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });

        }
    }


    let allPre = document.querySelectorAll("pre")
    allPre.forEach((pre) => {

        let types = [
            ["int", "intColor"],
            ["boolean", "booleanColor"],
            ["string", "stringColor"],
            ["url", "urlColor"],
            ["NOT NULL", "notnullColor"],
            ["NULL", "notnullColor"],
        ]

        let res = pre.innerHTML
        types.forEach((type) => {
            res = res.replaceAll(type[0], `<span class='${type[1]}'>${type[0]}</span>`)
        })


        const labelJson = ['_id', 'name', 'author', 'author', 'ine', "publishedYear", "description",
            "message", "title", "name", "bookshelves", "image", "searchTerm"

        ]
        labelJson.forEach((label) => {
            res = res.replaceAll(label, `<span class='labelColor'>${label}</span>`)
        })

        pre.innerHTML = res
    })

</script>
</body>
</html>